{"version":3,"sources":["SearchBar.js","InfoDisplay.js","FullWeatherCard.js","WeatherCard.js","App.js","index.js"],"names":["SearchBar","props","useState","input","setInput","useQuery","axios","get","then","data","isLoading","isError","error","Autocomplete","id","fullWidth","options","getOptionLabel","option","title","renderInput","params","TextField","label","variant","onChange","event","value","target","useStyles","makeStyles","fontSize","pos","marginBottom","InfoDisplay","classes","Grid","item","xs","size","className","Typography","component","align","icon","height","marginTop","margin","temp","paddingRight","FullWeatherCard","selectedData","imageLink","weather_state_abbr","Card","CardContent","style","padding","container","Moment","applicable_date","format","justify","alignItems","the_temp","toFixed","direction","max_temp","min_temp","src","alt","weather_state_name","wind_speed","wind_direction","wind_direction_compass","air_pressure","humidity","WeatherCard","textAlign","cursor","onClick","setSelectedData","width","queryClient","QueryClient","App","setLocation","consolidated_weather","QueryClientProvider","client","display","gridTemplateColumns","columnGap","gridTemplateRows","rowGap","gridRowStart","gridRowEnd","backgroundColor","slice","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc8a21d8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport { useQuery } from \"react-query\";\r\nimport top100Films from \"./markers.js\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const { data, isLoading, isError, error } = useQuery([\"getLocationInfo\", input], () => {\r\n    if (input) {\r\n      return axios.get(`http://localhost:8010/proxy/api/location/search/?query=${input}`)\r\n        .then(({ data } = {}) => data);\r\n    }\r\n    else return [];\r\n  });\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      fullWidth\r\n      options={!isLoading ? data : []}\r\n      getOptionLabel={option => option.title}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Select a Location\"\r\n          variant=\"outlined\"\r\n          onChange={(event, value) => setInput(event.target.value)}\r\n        />\r\n      )}\r\n      onChange={(event, value) => props.onChange(value)}\r\n    />\r\n  );\r\n}\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: 16\r\n  },\r\n  value: {\r\n    fontSize: 20\r\n  },\r\n  pos: {\r\n    marginBottom: 20\r\n  }\r\n});\r\n\r\nfunction InfoDisplay(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={props.size} className={classes.pos}>\r\n      <Typography className={classes.title} component=\"p\" align=\"center\">\r\n        {props.title}\r\n      </Typography>\r\n      <Typography className={classes.value} component=\"p\" align=\"center\">\r\n        {props.value}\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default InfoDisplay;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InfoDisplay from \"./InfoDisplay\";\r\nimport Moment from \"moment\";\r\n\r\nconst useStyles = makeStyles({\r\n  icon: {\r\n    height: 200,\r\n    marginBottom: 40,\r\n    marginTop: 20\r\n  },\r\n  title: {\r\n    margin: 20\r\n  },\r\n  temp: {\r\n    paddingRight: 30\r\n  }\r\n});\r\n\r\nfunction FullWeatherCard({ selectedData }) {\r\n  const classes = useStyles();\r\n\r\n  const imageLink =\r\n    \"https://www.metaweather.com/static/img/weather/png/\" +\r\n    selectedData.weather_state_abbr +\r\n    \".png\";\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent style={{ padding: '1rem' }}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component=\"h3\"\r\n              align=\"center\"\r\n              className={classes.title}\r\n            >\r\n              {Moment(selectedData.applicable_date).format(\"D MMMM YYYY\")}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            item\r\n            justify=\"flex-end\"\r\n            alignItems=\"center\"\r\n            className={classes.temp}\r\n            xs={4}\r\n          >\r\n            <Typography variant=\"h2\" component=\"h3\" align=\"right\">\r\n              {selectedData.the_temp.toFixed(2)} ºC\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            xs={3}\r\n            item\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Typography variant=\"h5\" component=\"p\">\r\n              Max: {selectedData.max_temp.toFixed(2)} ºC\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"p\">\r\n              Min: {selectedData.min_temp.toFixed(2)} ºC\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <img\r\n              className={classes.icon}\r\n              src={imageLink}\r\n              alt={selectedData.weather_state_name}\r\n            />\r\n          </Grid>\r\n          <InfoDisplay\r\n            title=\"Wind speed\"\r\n            value={selectedData.wind_speed.toFixed(2)}\r\n            size={4}\r\n          ></InfoDisplay>\r\n          <InfoDisplay\r\n            title=\"Wind direction\"\r\n            value={selectedData.wind_direction.toFixed(2)}\r\n            size={4}\r\n          ></InfoDisplay>\r\n          <InfoDisplay\r\n            title=\"Wind direction compass\"\r\n            value={selectedData.wind_direction_compass}\r\n            size={4}\r\n          ></InfoDisplay>\r\n          <InfoDisplay\r\n            title=\"Air pressure\"\r\n            value={selectedData.air_pressure.toFixed(2)}\r\n            size={4}\r\n          ></InfoDisplay>\r\n          <InfoDisplay\r\n            title=\"Humidity\"\r\n            value={selectedData.humidity.toFixed(2)}\r\n            size={4}\r\n          ></InfoDisplay>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card >\r\n  );\r\n}\r\n\r\nexport default FullWeatherCard;\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Moment from \"moment\";\r\n\r\nconst WeatherCard = (props) => {\r\n\r\n  function setSelectedData() {\r\n    props.setSelectedData(props.data);\r\n  }\r\n\r\n  const imageLink =\r\n    \"https://www.metaweather.com/static/img/weather/png/\" +\r\n    props.data.weather_state_abbr +\r\n    \".png\";\r\n\r\n  return (\r\n    <Card style={{ textAlign: 'center', cursor: \"pointer\" }}>\r\n      <CardContent onClick={setSelectedData} style={{ padding: '1rem' }}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {Moment(props.data.applicable_date).format(\"D MMM\")}\r\n        </Typography>\r\n        <img width=\"50%\" height=\"auto\" src={imageLink} alt={props.data.weather_state_name} style={{ margin: '1rem' }} />\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          {props.data.the_temp.toFixed(2)} ºC\r\n          </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SearchBar from \"./SearchBar\";\r\n//import WeatherDisplay from \"../components/WeatherDisplay/WeatherDisplay\";\r\nimport FullWeatherCard from \"./FullWeatherCard\";\r\nimport WeatherCard from \"./WeatherCard\";\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport \"./App.css\";\r\nimport data from \"./example_data_location_request.json\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst App = () => {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [selectedData, setSelectedData] = useState(data.consolidated_weather[0]);\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <>\r\n        <div id=\"search-bar\" style={{ margin: '1rem' }}>\r\n          <SearchBar onChange={setLocation}></SearchBar>\r\n        </div>\r\n        <div style={{ display: 'grid', gridTemplateColumns: '400px auto', columnGap: '1rem', gridTemplateRows: 'auto auto', rowGap: '1rem', margin: '1rem' }}>\r\n          <div id=\"map\" style={{ gridRowStart: '1', gridRowEnd: '3', backgroundColor: 'red' }}>\r\n            <h1>mapa</h1>\r\n          </div>\r\n          <div>\r\n            <div id=\"small-cards\" style={{ display: 'grid', gridTemplateColumns: 'repeat(5, auto)', columnGap: '1rem' }}>\r\n              {\r\n                data.consolidated_weather.slice(0, 5).map(data => {\r\n                  return (<WeatherCard key={data.id} data={data} setSelectedData={setSelectedData} />);\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n          <div id=\"big-card\">\r\n            <FullWeatherCard selectedData={selectedData}></FullWeatherCard>\r\n          </div>\r\n        </div>\r\n      </>\r\n    </QueryClientProvider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}